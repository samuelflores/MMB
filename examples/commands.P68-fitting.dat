firstStage 2
lastStage  2
# If we leave readPreviousFrameFile 1 (the default), then the ions at stage n will have the same coordinates as last.(n-1).pdb. So let's turn off structure file reading:
readPreviousFrameFile 0
# if we do stage 1, where readPreviousFrameFile is false, then monoAtoms will be adopted with an offset.
# We don't need the time integrator at all, in this case. We can't turn it off, so just numReportingIntervals to the minimum possible value:
numReportingIntervals 1
# We wil need the constant Pi, so define a user variable:
@pi 3.14159265358979
# We will create a single chain, chain ID Z:
sphericalHelix chainID Z
# Spiral will be right handed:
sphericalHelix spiralIsRightHanded 1
sphericalHelix center 31.89 31.89+2.0 31.89
sphericalHelix radius   16.3+2.3+(-2)*.05
# The pitch turns out to be pretty constant, across shells:
#sphericalHelix interStrandDistance 2.3
sphericalHelix pitch 2.3
# And of course this is also quite constant:
sphericalHelix helixAdvancePerBasePair .34
# The north and south pole regions have very poor resolution in this map, so we only trace over a relatively modest range of theta:
sphericalHelix startTheta 1.00
sphericalHelix endTheta 2.2
# This is a rotational offset, about the polar axis:
sphericalHelix phiOffset  (16-2)*20*@pi/180

# We clear the frequencyPhaseAmplitudeVector, out of paranoia rather than necessity:
sphericalHelix frequencyPhaseAmplitude clear

# If you want to make an atomistic (fine-grained) model, separately run MMB using this command file:
sphericalHelix spiralCommandsFileName commands.spiral.dat
# This is where the fine grained structural coordinates will be written:
sphericalHelix spiralPdbFileName spiral.pdb
# This tells MMB you want to generate the command file, with name specified with spiralCommandsFileName above:
sphericalHelix writeCommands

# This is the P68 density map, provided by Dominik Hrevik and Pavel Plevka:
density densityFileName  LocalRef_02_Cl02_res85_nocaps2_box.mrc
# This command tells MMB you want to compute the fitting energy for the coarse-grained chain Z. As a suggestion, vary one of the parameters above (center, radius, pitch, etc) and see which value gives you the lowest fitting energy. You can just search the stdout for "Total potential energy due to density fitting potential":
fitToDensity Z
# If you are varying the parameters to optimize, you will want to look at the fitting energy in the standard out.  In that case redirect the stdout to a log file. For example:
# MMB -C commands.P68.dat > out.log
# then extract the energies like this:
# grep "potential energy due to density fitting potential" out.log
